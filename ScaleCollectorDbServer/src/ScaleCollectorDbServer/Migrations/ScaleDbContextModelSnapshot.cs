// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ScaleCollectorDbServer.Data;

#nullable disable

namespace ScaleCollectorDbServer.Migrations
{
    [DbContext(typeof(ScaleDbContext))]
    partial class ScaleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ScaleCollectorDbServer.Data.Entities.Brand", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Tenant")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("ScaleCollectorDbServer.Data.Entities.Image", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModelKitId")
                        .HasColumnType("bigint");

                    b.Property<string>("Tenant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ModelKitId");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("ScaleCollectorDbServer.Data.Entities.ModelKit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("BrandId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ManufacturerArticleNumber")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long>("ScaleId")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Tenant")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("BrandId");

                    b.HasIndex("ScaleId");

                    b.HasIndex("Tenant");

                    b.ToTable("ModelKits");
                });

            modelBuilder.Entity("ScaleCollectorDbServer.Data.Entities.ModelKitReference", b =>
                {
                    b.Property<long>("ModelKitId")
                        .HasColumnType("bigint");

                    b.Property<long>("ReferenceId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.HasKey("ModelKitId", "ReferenceId");

                    b.HasIndex("ReferenceId");

                    b.ToTable("ModelKitReference");
                });

            modelBuilder.Entity("ScaleCollectorDbServer.Data.Entities.Scale", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("RatioFrom")
                        .HasColumnType("int");

                    b.Property<string>("RatioText")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("RatioTo")
                        .HasColumnType("int");

                    b.Property<string>("Tenant")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("Tenant", "RatioText")
                        .IsUnique();

                    b.ToTable("Scales");
                });

            modelBuilder.Entity("ScaleCollectorDbServer.Data.Entities.Image", b =>
                {
                    b.HasOne("ScaleCollectorDbServer.Data.Entities.ModelKit", null)
                        .WithMany("Images")
                        .HasForeignKey("ModelKitId");
                });

            modelBuilder.Entity("ScaleCollectorDbServer.Data.Entities.ModelKit", b =>
                {
                    b.HasOne("ScaleCollectorDbServer.Data.Entities.Brand", "Brand")
                        .WithMany("Models")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ScaleCollectorDbServer.Data.Entities.Scale", "Scale")
                        .WithMany("Models")
                        .HasForeignKey("ScaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Scale");
                });

            modelBuilder.Entity("ScaleCollectorDbServer.Data.Entities.ModelKitReference", b =>
                {
                    b.HasOne("ScaleCollectorDbServer.Data.Entities.ModelKit", "ModelKit")
                        .WithMany("ReferenceOf")
                        .HasForeignKey("ModelKitId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ScaleCollectorDbServer.Data.Entities.ModelKit", "Reference")
                        .WithMany("Reference")
                        .HasForeignKey("ReferenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModelKit");

                    b.Navigation("Reference");
                });

            modelBuilder.Entity("ScaleCollectorDbServer.Data.Entities.Brand", b =>
                {
                    b.Navigation("Models");
                });

            modelBuilder.Entity("ScaleCollectorDbServer.Data.Entities.ModelKit", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Reference");

                    b.Navigation("ReferenceOf");
                });

            modelBuilder.Entity("ScaleCollectorDbServer.Data.Entities.Scale", b =>
                {
                    b.Navigation("Models");
                });
#pragma warning restore 612, 618
        }
    }
}
